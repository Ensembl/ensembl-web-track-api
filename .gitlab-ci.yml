stages:
    - build
    - deploy

variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
    DOCKER_TLS_CERTDIR: ""

.branch-rules:
    rules:
        - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "main"'
          when: on_success
        - when: never

#Base templates
#Build & upload new Docker image
.build:
    extends: .branch-rules
    stage: build
    image: docker
    services:
        - docker:dind
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker build -t ${CONTAINER_IMAGE} --no-cache -f Dockerfile .
        - docker push ${CONTAINER_IMAGE}
        - docker rmi ${CONTAINER_IMAGE}
        - docker logout $CI_REGISTRY

#Deploy to k8s cluster (for main/dev branch)
.deploy:
    stage: deploy
    image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.1
    script:
        - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_IMAGE}#g" k8s/deployment.yaml
        - kubectl apply -f k8s/deployment.yaml

#Deploy review app (for feature branch)
.deploy-review:
    stage: deploy
    image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.1
    script: #Fill placeholders and apply manifest files
        - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_IMAGE}#g" k8s/review/deployment.yaml
        - sed -i "s#<BRANCH_NAME>#${CI_COMMIT_REF_SLUG}#g" k8s/review/deployment.yaml
        - sed -i "s#<BRANCH_NAME>#${CI_COMMIT_REF_SLUG}#g" k8s/review/service.yaml
        #- sed -i "s#<BRANCH_NAME>#${CI_COMMIT_REF_SLUG}#g" k8s/review/ingress.yaml
        - kubectl apply -f k8s/review/deployment.yaml
        - kubectl apply -f k8s/review/service.yaml
        #- kubectl apply -f k8s/review/ingress.yaml #done by FE review app deployment

#Stop review app (cleanup resources) 
.stop-review:
    stage: deploy
    image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.1
    variables:
        GIT_STRATEGY: none
    when: manual
    script:
        #- kubectl delete ingress ensembl-track-api-${CI_COMMIT_REF_SLUG}-ingress
        - kubectl delete service ensembl-track-api-${CI_COMMIT_REF_SLUG}-service
        - kubectl delete deploy ensembl-track-api-${CI_COMMIT_REF_SLUG}-deployment

.deploy-newk8s:
    extends: .branch-rules
    stage: deploy
    image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:latest
    script:
        - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
        - git -C ensembl-k8s-manifests/ checkout k8s123-migration
        - cd ensembl-k8s-manifests/ensembl-web-track-api
        - kustomize edit set image DOCKER_IMAGE=${CONTAINER_IMAGE}
        - kubectl apply -k ./

#Build docker image 
Docker:
    extends: .build

#Deploy feature branch to dev (review apps with custom BE and production DB)
Review:WP-HX:
    extends: .deploy-review
    environment:
        name: wp-hx-dev-ing
        url: http://$CI_COMMIT_REF_SLUG.review.ensembl.org
        on_stop: Stop_review
    except:
        - main
        - dev
        - update

#Deploy special feature branch to dev (review apps with custom BE and internal DB)
Review_db:WP-HX:
    extends: .deploy-review
    environment:
        name: wp-hx-dev-ing
        url: http://update-track-api.review.ensembl.org
    after_script: #restart deployment with new env that points to internal track database
        - sed -i "s#<BRANCH_NAME>#${CI_COMMIT_REF_SLUG}#g" k8s/review/ingress.yaml
        - kubectl apply -f k8s/review/ingress.yaml
        - kubectl set env deployment/ensembl-track-api-update-deployment  
          --from configmap/ensembl-track-api-review-configmap
    only:
        - update


#Stop review appp
Stop_review:
    extends: .stop-review
    environment:
        name: wp-hx-dev-ing
        action: stop
    except:
        - main
        - dev
        - update

#Deploy main branch to dev (default/production BE for review apps)
Dev:WP-HX:
    extends: .deploy
    environment:
        name: wp-hx-dev
    only:
        - main

Prod:wp40:HL:
  extends: .deploy-newk8s
  environment:
    name: wp40-hl-prod
    
#Deploy job for new k8s cluster
Staging:WP40:HL:
    extends: .deploy-newk8s
    environment:
        name: wp40-hl-staging
    when: manual

Internal:WP40:HL:
    extends: .deploy-newk8s
    environment:
        name: wp40-hl-internal
    when: manual

Dev:WP40:HL:
    extends: .deploy-newk8s
    environment:
        name: wp40-hl-development
    when: manual

Dev:WP41:HX:
    extends: .deploy-newk8s
    environment:
        name: wp41-hx-development
    when: manual

Prod:WP41:HX:
    extends: .deploy-newk8s
    environment:
        name: wp41-hx-prod
    when: manual

